#!/usr/bin/env python3

import iterm2
import os

color_presets_map = {
    'gruvbox': 'gruvbox',
    'cat-moc': 'catppuccin-mocha',
    'paster': 'Pastel (Dark Background)',
    'cat-latte': 'catppuccin-latte',
    'tango-light': 'Tango Light',
    'dark': 'Dark Background',
    'tango-dark': 'Tango Dark',
    'light': 'Light Background',
    'smooth': 'Smoooooth',
    'cat-frappe': 'catppuccin-frappe',
    'sol-light': 'Solarized Light',
    'sol-dark': 'Solarized Dark',
    'cat-mac': 'catppuccin-macchiato',
    "dracula": "Dracula",
}


async def SetPresetInSession(connection, session, preset_name):
    preset = await iterm2.ColorPreset.async_get(connection, preset_name)
    if not preset:
        return
    profile = await session.async_get_profile()
    if not profile:
        return
    await profile.async_set_color_preset(preset)


async def main(connection):
    app = await iterm2.async_get_app(connection)
    color_preset_names = await iterm2.ColorPreset.async_get_list(connection)
    session = app.current_terminal_window.current_tab.current_session
    if os.getenv("THEME_COLOR") is None:
        print("THEME_COLOR is not set")
        return
    tempColor = os.getenv("THEME_COLOR")
    color = color_presets_map[tempColor]
    if color in color_preset_names:
        print("Setting color preset to " + color)
        await SetPresetInSession(connection, session, color)
iterm2.run_until_complete(main)
